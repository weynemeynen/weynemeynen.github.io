import { useState, useEffect, useCallback } from 'react'
import axios from 'axios'

export default (url) => {
  const baseUrl = 'https://api.github.com/users'
  const [isLoading, setIsLoading] = useState(false)
  const [response, setResponse] = useState([])
  const [error, setError] = useState(null)
  const [options, setOptions] = useState({})

  const doFetch = useCallback((options = {}) => {
    setOptions(options);
    setIsLoading(true);
  }, [])

  useEffect(() => {
    if (!isLoading) return

    axios(baseUrl + url, options)
      .then((result) => {
        // console.log('успешный запрос', result.data)
        setIsLoading(false)
        setResponse(result.data)
      })
      .catch((error) => {
        console.log('ошибка запроса', error)
        setIsLoading(false)
        setError(error.response.data)
      })
  }, [isLoading, options, url])

  return [{ isLoading, response, error }, doFetch]
}