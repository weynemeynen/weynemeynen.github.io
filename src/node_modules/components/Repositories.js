import React, { useEffect, useContext } from 'react'
import classNames from 'classnames'

import { ThemeContext } from 'contexts'
import { useFetch } from 'hooks/useFetch'

export default function Repositories() {
  const [theme,] = useContext(ThemeContext)
  const apiUrl = '/weynemeynen/repos'
  const [{ response: repos, isLoading }, doFetch] = useFetch(apiUrl)

  useEffect(() => {
    doFetch()
  }, [doFetch])

  // const baseUrl = 'https://api.github.com/users/weynemeynen/repos'
  // const [repos, setRepos] = useState([])

  // useEffect(() => {
  //   axios(baseUrl)
  //     .then((result) => {
  //       console.log('success', result.data)
  //       setRepos(result.data)
  //     })
  //     .catch((error) => {
  //       console.log('ошибка запроса', error)
  //       setIsLoading(false)
  //       setError(error.response.data)
  //     })
  // }, [])

  const textColorLink = theme === 'dark' ? 'info' : 'primary'
  const borderColor = theme === 'dark' ? 'border-secondary' : ''

  return (
    <div className='repositories'>
      {repos.map((repo, index) => {
        const languageClass = classNames({
          'info': repo.language === 'Vue',
          'warning': repo.language === 'JavaScript',
          'danger': repo.language === 'HTML',
        })
        return (
          <div className={`card border-top-0 border-start-0 border-end-0 rounded-0 bg-transparent ${borderColor}`} key={repo.id}>
            <div className="row g-0">
              <div className="col-sm-12">
                <div className="card-body">
                  <a href={repo.homepage} target='_blank' className={`card-title fs-5 fw-bold text-decoration-none text-${textColorLink}`}>{repo.name}</a>
                  <small className="card-text d-block">{repo.description}</small>
                  <small className="card-text d-block">
                    <small>
                      <span className={`rounded-circle d-inline-block me-1 border border-secondary bg-${languageClass}`} style={{ width: '10px', height: '10px' }}></span>
                      <span className='me-3'>{repo.language}</span>
                    </small>
                    <small className="text-muted">
                      <span className='me-1'>обновлено</span>
                      <span>{repo.updated_at}</span>
                    </small>
                  </small>
                </div>
              </div>
            </div>
          </div>
        )
      })}
    </div>
  )
}