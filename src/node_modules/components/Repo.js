import React, { useContext, useEffect, useState } from 'react'
import classnames from 'classnames'

import { ThemeContext, LIGHT, DARK } from 'contexts'
import useFetch from 'hooks/useFetch'
import { Modal } from 'components/Modal'

export default function Repo({ repo }) {
  const [theme,] = useContext(ThemeContext)
  const { name } = repo
  const apiUrl = `/repos/weynemeynen/${name}/contents`
  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl)

  const [displayModal, setDisplayModal] = useState(false)
  const [dirName, setDirName] = useState('')

  useEffect(() => {
    doFetch()
  }, [doFetch, repo])

  function showModal(nameDir) {
    setDirName(nameDir)
    setDisplayModal(true)
  }

  function handleClose(e) {
    if (e.key == 'Escape' || e.type === 'click') setDisplayModal(false)
  }

  useEffect(() => {
    addEventListener('keydown', handleClose);
    return () => removeEventListener('keydown', handleClose)
  }, [])

  const buttonClasses = classnames({
    'btn-outline-primary': theme === LIGHT,
    'btn-outline-warning': theme === DARK,
  })

  const dirs = response.map((dir) => {
    if (dir.type === 'dir') {
      return <a
        className={`btn btn-lg rounded-pill me-2 mb-2 ${buttonClasses}`}
        role='button'
        key={dir.name}
        onClick={() => showModal(dir.name)}
      >
        {dir.name}
      </a>
    }
  })


  return (
    <>
      <h1 className='my-4 ps-3'>{name}</h1>
      <div className='directories ps-3'>{dirs}</div>
      <Modal
        display={displayModal}
        handleClose={handleClose}
        repoName={repo.name}
        dirName={dirName}
      />
    </>
  )
}