import React, { useState, useContext, useEffect } from 'react'
import classnames from 'classnames'
import { Link } from 'react-router-dom'

import { withRouter } from 'react-router-dom'
import { routesMap } from 'routes'

import { ThemeContext, LIGHT, DARK } from 'contexts'
import useFetch from 'hooks/useFetch'

function RepoList(props) {
  const { repoName/*, showModal*/, history, showModal } = props
  const [theme,] = useContext(ThemeContext)
  const apiUrl = `/repos/weynemeynen/${repoName}/contents`
  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl)

  useEffect(() => {
    doFetch()
  }, [doFetch])

  const buttonClasses = classnames({
    'btn-outline-primary': theme === LIGHT,
    'btn-outline-light': theme === DARK,
  })
  const backClasses = classnames({
    'text-info': theme === DARK
  })

  const dirs = response.map((dir) => {
    if (
      dir.type === 'dir'
      // скрытые директори
      && dir.name !== 'github-profiles'
      && dir.name !== 'dom-array-methods'
      && dir.name !== 'sofia'
    ) {
      return (
        // <button
        //   key={dir.name}
        //   className={`btn btn-lg rounded-pill me-2 mb-2 shadow-sm ${buttonClasses}`}
        //   onClick={() => showModal(dir.name)}
        // >
        //   {dir.name.split('-').join(' ')}
        // </button>
        <Link
          to={`/repositories/${repoName}/${dir.name}`}
          key={dir.name}
          className={`btn btn-lg rounded-pill me-2 mb-2 shadow-sm ${buttonClasses}`}
          onClick={() => showModal(dir.name)}
        >
          {dir.name.split('-').join(' ')}
        </Link>
      )
    }
  }).filter(dir => dir)

  return (
    <>
      <h1 className='my-4 d-flex align-items-baseline'>
        <i className={`bi-arrow-left-circle fs-4 me-2 ${backClasses}`} role='button' title='назад' onClick={() => history.push(routesMap.repositories)} />
        <span className='d-flex align-items-center'>
          {repoName}
          <small className="badge rounded-pill ms-2 fw-normal fs-6 mt-2 bg-light text-dark p-1">{dirs.length}</small>
        </span>
      </h1>
      <div className='directories'>{dirs}</div>
    </>
  )
}

export default withRouter(RepoList)